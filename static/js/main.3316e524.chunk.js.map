{"version":3,"sources":["types/Sort.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Sort","TodoList","todos","selectedTodo","userId","selectedTodoID","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","setQuery","query","setStatusFilter","onChange","event","value","target","active","all","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","users","setUsers","useEffect","getUser","usersFromServer","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedTodo","setUserId","statusFilter","todosFromServer","filteredTodos","filter","toLowerCase","includes","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3316e524.chunk.js","sourcesContent":["export enum Sort {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import classNames from 'classnames';\nimport React, { Fragment } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodoID: Todo | null\n  todos: Todo[],\n  selectedTodo: (value: Todo) => void,\n  userId: (value: React.SetStateAction<number>) => void\n\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  userId,\n  selectedTodoID,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <Fragment key={todo.id}>\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger',\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedTodo(todo);\n                    userId(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n\n                    <i className={classNames('far', {\n                      'fa-eye-slash': selectedTodoID?.id === todo.id,\n                      'fa-eye': !(selectedTodoID?.id === todo.id),\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          </Fragment>\n        );\n      })}\n\n    </tbody>\n  </table>\n);\n","import { Sort } from '../../types/Sort';\n\ntype Props = {\n  setQuery: (value: string) => void,\n  query: string,\n  setStatusFilter:(value: Sort) => void\n};\n\nexport const TodoFilter: React.FC<Props> = (\n\n  { setQuery, query, setStatusFilter },\n) => {\n  const sort = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let value: Sort;\n\n    switch (event.target.value) {\n      case 'active':\n        value = Sort.active;\n        break;\n      case 'completed':\n        value = Sort.completed;\n        break;\n      default:\n        value = Sort.all;\n    }\n\n    setStatusFilter(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={sort}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number;\n  todo: Todo,\n  selectedTodo(state: Todo | null): void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId, todo, selectedTodo,\n}) => {\n  const [users, setUsers] = useState<User>();\n\n  useEffect(() => {\n    getUser(userId).then(usersFromServer => {\n      setUsers(usersFromServer);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div\n        className=\"modal-background\"\n        onClick={() => {\n          selectedTodo(null);\n        }}\n\n      />\n\n      {!users ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                selectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href={`mailto:${users.email}`}>\n                {users?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Sort } from './types/Sort';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [userId, setUserId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [statusFilter, setStatusFilter] = useState<Sort>(Sort.all);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      setTodos(todosFromServer);\n      setIsLoaded(false);\n    });\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (statusFilter) {\n      case Sort.completed:\n        return todo.completed && todo.title.toLowerCase().includes(query.toLowerCase());\n      case Sort.active:\n        return !todo.completed && todo.title.toLowerCase().includes(query.toLowerCase());\n      default:\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                setStatusFilter={setStatusFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded && <Loader />}\n              {!isLoaded && (\n                <TodoList\n                  selectedTodoID={selectedTodo}\n                  todos={filteredTodos}\n                  selectedTodo={todo => setSelectedTodo(todo)}\n                  userId={user => setUserId(user)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          userId={userId}\n          todo={selectedTodo}\n          selectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}